"""
Django settings for world project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
import re

from . import private_settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = private_settings.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

MAIN_HOST = 'worldresults.org'
ALLOWED_HOSTS = [MAIN_HOST]
ADMINS = [('Alexey Chernov', 'alexey.chernov@gmail.com'), ]
MANAGERS = [('Alexey Chernov', 'alexey.chernov@gmail.com'), ]


# Application definition

INSTALLED_APPS = [
    'results.apps.ResultsConfig',
    'starrating.apps.StarratingConfig',
    'world_auth.apps.WorldAuthConfig',
    'editor.apps.EditorConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.gis',
    'social_django',
    'menu',
    'tinymce',
    'django_select2',
    'django_tables2',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

ROOT_URLCONF = 'world.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'world.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.mysql',
        'HOST': '127.0.0.1',
        'NAME': 'world',
        'USER': private_settings.DB_USER,
        'PASSWORD': private_settings.DB_PASSWORD,
        'CHARSET': 'utf8mb4',
        'COLLATION': 'utf8mb4_ru_0900_ai_ci',
        'OPTIONS': {   # Options common for mysql-connector-pythom and mysqlclient
            'charset': 'utf8mb4', # character_set_client, character_set_result, character_set_connection
            'use_unicode': True,  # 
         },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

MEDIA_ROOT = '/var/local/django/media/'
MAIN_PAGE = f'https://{MAIN_HOST}'
MEDIA_URL = MAIN_PAGE + '/media/'
INTERNAL_FILES_ROOT = '/var/local/django/private/' # Where Django can put files invisible for users

STATIC_ROOT = '/var/local/django/static'
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'world_auth:login'
LOGIN_REDIRECT_URL = 'results:home'
LOGOUT_REDIRECT_URL = MAIN_PAGE

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.vk.VKOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_LOGIN_URL = MAIN_PAGE
SOCIAL_AUTH_LOGIN_ERROR_URL = MAIN_PAGE
SOCIAL_AUTH_USER_MODEL = 'auth.User'
SOCIAL_AUTH_UID_LENGTH = 223
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'results:home'
SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/details/just_registered/'

SOCIAL_AUTH_FACEBOOK_KEY = private_settings.SOCIAL_AUTH_FACEBOOK_KEY
SOCIAL_AUTH_FACEBOOK_SECRET = private_settings.SOCIAL_AUTH_FACEBOOK_SECRET
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {'fields': 'id,name,email',}

SOCIAL_AUTH_TWITTER_KEY = private_settings.SOCIAL_AUTH_TWITTER_KEY
SOCIAL_AUTH_TWITTER_SECRET = private_settings.SOCIAL_AUTH_TWITTER_SECRET

# TODO
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp-relay.gmail.com' # 'mail.' + MAIN_HOST
EMAIL_PORT = 587
EMAIL_INFO_USER = f'info@{MAIN_HOST}'
EMAIL_INFO_PASSWORD = private_settings.EMAIL_INFO_PASSWORD
EMAIL_HOST_USER = EMAIL_INFO_USER # f'base@{MAIN_HOST}'
EMAIL_HOST_PASSWORD = EMAIL_INFO_PASSWORD # private_settings.EMAIL_HOST_PASSWORDS[EMAIL_HOST_USER]
# # EMAIL_HOST_PASSWORD = private_settings.EMAIL_HOST_PASSWORD
# PANIC_PASSWORD = private_settings.PANIC_PASSWORD

DEFAULT_FROM_EMAIL = f'World Results <{EMAIL_HOST_USER}>'

SERVER_EMAIL = EMAIL_HOST_USER # For error mails

MAX_UPLOAD_SIZE = 20971520
MAX_UPLOAD_SIZE_MB = 20 # For verbose messages. Keep it consistent with the number above

MAX_USER_UPLOAD_SIZE = 5242880
MAX_USER_UPLOAD_SIZE_MB = 5 # For verbose messages. Keep it consistent with the number above

TINYMCE_JS_URL = os.path.join(STATIC_URL, "tinymce/tinymce.min.js")
TINYMCE_JS_ROOT = os.path.join(STATIC_ROOT, "tinymce")
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'modern',
    'plugins': 'link code paste image',
    'paste_as_text': True,
    'convert_urls': False,
}

IGNORABLE_404_URLS = [
    re.compile(r'^/favicon\.ico$'),
    re.compile(r'^/robots\.txt$'),
    re.compile(r'^/wp'),
    re.compile(r'^/runner/'),
    re.compile(r'^/result/'),
    re.compile(r'^/sitemap.xml'),
    re.compile(r'^/race/'),
    re.compile(r'^/event/'),
    re.compile(r'^/series/'),
    re.compile(r'^/klb/person/'),
    re.compile(r'^/editor/runner/'),
    re.compile(r'^/editor/klb/person/'),
    re.compile(r'^/news/'),
    re.compile(r'^/index\.php'),
    re.compile(r'^/klbklb'),
    re.compile(r'/index\.php$'),
    re.compile(r'wp-login\.php$'),
    re.compile(r'/wp-admin/$'),
    re.compile(r'^/editor/city/'),
    re.compile(r'^/editor/event/'),
    re.compile(r'^/editor/result/'),
    re.compile(r'^/wordpress/'),
    re.compile(r'^/public_html/'),
    re.compile(r'^/\.well-known/'),
    re.compile(r'^/asset-manifest\.json$'),
    re.compile(r'^/apple-touch-icon\.png$'),
    re.compile(r'^/adframe\.js$'),
    re.compile(r'^/rez\.php'),
    re.compile(r'^/races_rez\.php'),
    re.compile(r'^/rases\.php'),
    re.compile(r'^/lastarticles'),
    re.compile(r'^/dns-query/'),
    re.compile(r'^/owa/'),
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(asctime)s %(name)s:%(levelname)s %(pathname)s.%(lineno)d %(message)s',
            'datefmt': '%y%m%d %H:%M:%S',
        },
        'simple2': {
            'format': '%(asctime)s %(name)s:%(levelname)s %(message)s',
            'datefmt': '%y%m%d %H:%M:%S',
        },
    },
    'handlers': {
        'file_root': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/other.log',
            'formatter': 'simple',
        },
        'file_django_web': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/django_web.log',
            'formatter': 'simple',
        },
        'file_django_request': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/django.request.log',
            'formatter': 'simple',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        },
        'file_klb_report': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/klb_report.log',
            'formatter': 'simple',
        },
        'file_db_structure': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/db_structure.log',
            'formatter': 'simple',
        },
        'file_vk': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/vk.log',
            'formatter': 'simple',
        },
        'file_dbchecks': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/dbchecks.log',
            'formatter': 'simple2',
        },
        'file_sr_dbchecks': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/sr_dbchecks.log',
            'formatter': 'simple2',
        },
        'file_sr_views': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/sr_views.log',
            'formatter': 'simple',
        },
        'file_sr_updater': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/sr_updater.log',
            'formatter': 'simple2',
        },
        'file_structure_modification': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/modifications_of_structure.log',
            'formatter': 'simple',
        },
        # 'file_new_code': {
        #   'level': 'DEBUG',
        #   'class': 'logging.FileHandler',
        #   'filename': BASE_DIR + '/logs/new_code.log',
        #   'formatter': 'simple',
        # },
    },
    'loggers': {
        '': {
            'handlers' : ['file_root'],
            'level': 'INFO',
            'propagate': False
        },
        'django': {
            'handlers': ['file_django_web'],
            'level': 'INFO',
            'propagate': False
        },
        'django.request': {
            'handlers': ['file_django_request', 'mail_admins'],
            'level': 'INFO',
            'propagate': False
        },
        'editor.views.views_klb_report': {
            'handlers' : ['file_klb_report'],
            'level': 'DEBUG',
            'propagate': False
        },
        'editor.views.views_db_structure': {
            'handlers' : ['file_db_structure'],
            'level': 'INFO',
            'propagate': False
        },
        'vk': {
            'handlers' : ['file_vk'],
            'level': 'INFO',
            'propagate': False
        },
        'dbchecks': {
            'handlers' : ['file_dbchecks'],
            'level': 'DEBUG',
            'propagate': False
        },
        'sr_dbchecks': {
            'handlers' : ['file_sr_dbchecks'],
            'level': 'INFO',
            'propagate': False
        },
        'sr_views': {
            'handlers' : ['file_sr_views'],
            'level': 'DEBUG',
            'propagate': False
        },
        'sr_updater': {
            'handlers' : ['file_sr_updater'],
            'level': 'INFO',
            'propagate': False
        },
        'structure_modification': {
            'handlers' : ['file_structure_modification'],
            'level': 'DEBUG',
            'propagate': False
        },
        # 'new_code': {
        #   'handlers' : ['file_new_code'],
        #   'level': 'DEBUG',
        #   'propagate': False
        # },
    },
}

# X_FRAME_OPTIONS = 'ALLOW-FROM https://webvisor.com/'
# X_FRAME_OPTIONS = 'ALLOWALL' # Temprorary for installing SSL

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/local/django/mainsite/cache',
        'TIMEOUT': 60 * 60 * 4,
        'OPTIONS': {
            'MAX_ENTRIES': 1000
        }
    }
}

SELECT2_JS = ['https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js']
SELECT2_CSS = ['https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css']
